引擎：
    myisam引擎是5.1版本之前的默认引擎，支持全文检索、压缩、空间函数等，但是不支持事务和行级锁，所以一般用于有大量查询少量插入的场景来使用，而且myisam不支持外键，并且索引和数据是分开存储的。xxx.MYD  xxx.MYI
    innodb是基于聚簇索引建立的，和myisam相反它支持事务、外键，并且通过MVCC来支持高并发，索引和数据存储在一起。xxx.frm

索引：
    聚簇索引：主键索引，节点只包含id索引列，而叶子节点包含索引列和数据，这种数据和索引在一起存储的索引方式叫做聚簇索引，一张表只能有一个聚簇索引。假设没有定义主键，InnoDB会选择一个唯一的非空索引代替，如果没有的话则会隐式定义一个主键作为聚簇索引。
    非聚簇索引 ：二级索引，innodb二级索引叶子节点存的是主键id,需要通过回表操作查到数据，myisam存的是数据地址
    覆盖索引：是在一次查询中，如果一个索引包含或者说覆盖所有需要查询的字段的值，我们就称之为覆盖索引，而不再需要回表查询。explain sql语句看Extra的结果是否是“Using index”即可
    回表： innodb二级索引需要先查到主键，然后通过主键索引找到对应的数据

事务的特性：
    原子性：事务中的操作要么全部成功，要么全部失败。
    一致性：数据库总是从一个一致性的状态转换到另外一个一致性的状态。事务提交后才会生效
    隔离性：事务的修改在最终提交前，对其他事务是不可见的。
    持久性：一旦事务提交，所做的修改就会永久保存到数据库中。

事务的隔离级别：
    read uncommit: 读未提交，可能会读到其他事务未提交的数据，也叫做脏读。
    read commit: 读已提交，两次读取结果不一致，叫做不可重复读。
    repeatable read: 可重复复读，这是mysql的默认级别，就是每次读取结果都一样，但是有可能产生幻读。
    serializable: 串行，一般是不会使用的，他会给每一行读取的数据加锁，会导致大量超时和锁竞争的问题。

事务日志：预写式日志
    写事务日志（追加，连续空间写入快）-> 修改内存数据 -> 刷到磁盘

