user  daemon;
worker_processes 1;
error_log logs/error.log;

events {
	worker_connections 1024;
	use epoll;
}

http{
	upstream httpd{
                #ip_hash;
                server 10.10.16.128:888 weight=1; #weight=1
                server 10.10.16.128:8888 max_fails=3 fail_timeout=20s weight=1;
                #server 10.10.16.128:8080 backup;
        }
	log_format main '[$time_local] [$remote_addr] [$remote_user] [$request]'
			' [$status] [$body_bytes_sent] [$http_referer]'
			' [$http_user_agent] [$http_x_forwarded_for] [$request_time]'
			' [$upstream_addr] [$upstream_response_time] [$server_port] [$request_body] [$trace_id] [$rpc_id]';	
	
	lua_package_path '/data/openresty/conf/?.lua;;';
	init_by_lua_block {
		--local status = require "status"
		--status.init()
		uuid4 = require "uuid4"
		math = require "math"
	}
	index index.php index.html;
	lua_code_cache off;	
	server {
		listen 6699;
		set $currentDate 'day';
		access_by_lua_block {
			--ngx.var.currentDate = os.date("%Y-%m-%d")
			filter = require "filter";
            filter.run();
			ngx.var.currentDate = ngx.today()
			ngx.ctx.a = 10
		}
		rewrite_by_lua_block {
                        ngx.ctx.a = 20
                }
		access_log logs/access.$currentDate.log main;
	
		root www/;
		set_by_lua_block $trace_id {
			if ngx.var.http_x_request_id == nil then
				return math.random(1000000000,os.time())..uuid4.getUUID()
			else
				return ngx.var.http_x_request_id;
			end
		}
		set_by_lua_block $rpc_id {
			if ngx.var.http_x_rpc_id == nil then
				return 0
			else
				return ngx.var.http_x_rpc_id..".0"
			end
		}

		default_type text/html;
		
		proxy_set_header X-Request-Id $trace_id;
		
		location / {
			
			content_by_lua_block {
				ngx.say(ngx.ctx.a)
				require "test"
			}
		}
		location ~ \.php$ {
			proxy_pass http://httpd;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; #$proxy_add_x_forwarded_for
			proxy_set_header User-Agent $http_user_agent;
			proxy_set_header X-Request-Id $trace_id;
			proxy_set_header X-Rpc-Id $rpc_id;
		}	
	}
}
